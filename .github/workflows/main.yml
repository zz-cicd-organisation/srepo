# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: 'Set body'
        id: req_body
        run: |
          _reviewers_json="$(cat <<EOF
          [ { "type": "Team", "id": 0 } ]
          EOF
          )"
          
          echo "body=${_reviewers_json}" >> GITHUB_OUTPUT

      - uses: octokit/request-action@v2.x
        id: create_deployment
        with:
          route: POST /repos/{owner}/{repo}/deployments
#          owner: zz-cicd-organisation
#          repo: srepo
##          name: "Test check run"
#          environment: "svc"
#          description: "deploying svc"
#          ref: "main"
#          payload: ${{ steps.req_body.outputs.body }}
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
          INPUT_REPO: irepo
          INPUT_OWNER: zz-cicd-organisation
          INPUT_REF: main
          INPUT_ENVIRONMENT: svc
          INPUT_PAYLOAD: ${{ steps.req_body.outputs.body }}

#      - run: sleep 30

      - uses: octokit/request-action@v2.x
        id: create_deployment_status
        with:
          route: POST ${{ fromJson(steps.create_deployment.outputs.data).statuses_url }}
          state: "success"
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}


